# traefik.toml
################################################################
# Global configuration
################################################################

defaultEntryPoints = ["http", "https"]

<<<<<<< HEAD:traefik/traefik.toml
# [web]
# # Port for the status page
# address = ":8080"

# Entrypoints, http and https
[entryPoints]
  
  # http should be redirected to https
=======
[entryPoints]
  [entryPoints.dashboard]
    address = ":8080"
    [entryPoints.dashboard.auth]
      [entryPoints.dashboard.auth.basic]
        users = ["admin:$apr1$4HpEY3Ul$lNUc7FjVV4qNt0xmBrglx1"]
>>>>>>> main:traefik/traefik/traefik.toml
  [entryPoints.http]
    address = ":80"
      [entryPoints.http.redirect]
        entryPoint = "https"
  [entryPoints.https]
<<<<<<< HEAD:traefik/traefik.toml
  address = ":443"
    [entryPoints.https.tls]
  [entryPoints.dashboard]
  address = ":8080"
    [entryPoints.dashboard.au]
      [entryPoints.dashboard.auth.basic]
      usersFile = "/etc/htpasswd/.htpasswd"

[api]
entryPoint = "dashboard"

=======
    address = ":443"
      [entryPoints.https.tls]

[api]
entrypoint="dashboard"
>>>>>>> main:traefik/traefik/traefik.toml

[acme]
email = "antonjaragon@gmail.com"
storageFile = "/etc/traefik/acme/acme.json"
entryPoint = "https"
<<<<<<< HEAD:traefik/traefik.toml
# CA server to use
# Uncomment the line to run on the staging let's encrypt server
# Leave comment to go to prod
# caServer = "https://acme-staging.api.letsencrypt.org/directory"
# Enable on demand certificate. This will request a certificate from Let's Encrypt during the first TLS handshake for a hostname that does not yet have a certificate.
# WARNING, TLS handshakes will be slow when requesting a hostname certificate for the first time, this can leads to DoS attacks.
# WARNING, Take note that Let's Encrypt have rate limiting: https://letsencrypt.org/docs/rate-limits
onDemand = true
# Enable certificate generation on frontends Host rules. This will request a certificate from Let's Encrypt for each frontend with a Host rule.
# For example, a rule Host:test1.traefik.io,test2.traefik.io will request a certificate with main domain test1.traefik.io and SAN test2.traefik.io.
OnHostRule = true
# Use a HTTP-01 acme challenge rather than TLS-SNI-01 challenge
# Optional but recommend
=======
onHostRule = true
>>>>>>> main:traefik/traefik/traefik.toml
  [acme.httpChallenge]
  entryPoint = "http"

[docker]
<<<<<<< HEAD:traefik/traefik.toml
# Docker server endpoint. Can be a tcp or a unix socket endpoint.
# endpoint = "unix:///var/run/docker.sock"
# Default domain used.
# Can be overridden by setting the "traefik.domain" label on a container.
domain = "$DOMAIN_NAME"
# Enable watch docker changes
watch = true
# Expose containers by default in traefik
# If set to false, containers that don't have `traefik.enable=true` will be ignored
exposedbydefault = true
# network = "web"
=======
domain = "classifier.site"
watch = true
network = "web"
>>>>>>> main:traefik/traefik/traefik.toml
